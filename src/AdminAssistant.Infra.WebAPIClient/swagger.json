{
  "swagger": "2.0",
  "info": {
    "title": "Admin Assistant WebAPI v1.",
    "version": "v1"
  },
  "paths": {
    "/api/v1/accounts-module/BankAccount": {
      "put": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Update an existing BankAccount.",
        "operationId": "PutBankAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BankAccountUpdateRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - returns the updated BankAccountResponseDto",
            "schema": {
              "$ref": "#/definitions/BankAccountResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the BankAccountID of the given bankAccountUpdateRequest does not exist."
          },
          "422": {
            "description": "UnprocessableEntity - When the given bankAccountUpdateRequest is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Creates a new BankAccount.",
        "operationId": "PostBankAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BankAccountCreateRequestDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created - returns the created bank account with its assigned newly ID.",
            "schema": {
              "$ref": "#/definitions/BankAccountResponseDto"
            }
          },
          "422": {
            "description": "UnprocessableEntity - When the given bankAccountCreateRequest is invalid."
          }
        }
      }
    },
    "/api/v1/accounts-module/BankAccount/{bankAccountID}": {
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Gets the BankAccountResponseDto with the given ID.",
        "operationId": "GetBankAccountById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankAccountID",
            "description": "The ID of the BankAccount to be returned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - returns the BankAccount requested.",
            "schema": {
              "$ref": "#/definitions/BankAccountResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the given BankAccountID does not exist."
          }
        }
      }
    },
    "/api/v1/accounts-module/BankAccount/{bankAccountID}/transactions": {
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Get the transactions since the last bank account statement for the BankAccount with the given ID.",
        "operationId": "GetBankAccountTransactionByBankAccountID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankAccountID",
            "description": "The ID of the BankAccount.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - returns a list of BankAccountTransactionResponseDto.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankAccountTransactionResponseDto"
              }
            }
          },
          "404": {
            "description": "NotFound - When the given BankAccountID does not exist."
          }
        }
      }
    },
    "/api/v1/accounts-module/BankAccountInfo": {
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Lists the summary info for all the available BankAccounts owned by the logged in user.",
        "operationId": "GetBankAccountInfo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of BankAccountInfoResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankAccountInfoResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts-module/BankAccountType": {
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Lists all bank account types supported by the API wherever a BankAccountTypeID can be provided.",
        "operationId": "GetBankAccountType",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of BankAccountTypeResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankAccountTypeResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts-module/Bank": {
      "put": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Update an existing Bank.",
        "operationId": "PutBank",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BankUpdateRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - returns the updated BankResponseDto",
            "schema": {
              "$ref": "#/definitions/BankResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the BankID of the given bankUpdateRequest does not exist."
          },
          "422": {
            "description": "UnprocessableEntity - When the given bankUpdateRequest is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Creates a new Bank.",
        "operationId": "PostBank",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BankCreateRequestDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created - returns the created bank with its assigned newly ID.",
            "schema": {
              "$ref": "#/definitions/BankResponseDto"
            }
          },
          "422": {
            "description": "UnprocessableEntity - When the given bankCreateRequest is invalid."
          }
        }
      },
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Lists all banks.",
        "operationId": "GetBank",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of BankResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts-module/Bank/{bankID}": {
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "Gets the Bank with the given ID.",
        "operationId": "GetBankById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankID",
            "description": "The ID of the Bank to be returned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - returns the Bank requested.",
            "schema": {
              "$ref": "#/definitions/BankResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the given BankID does not exist."
          }
        }
      }
    },
    "/api/v1/assetregister-module/Asset": {
      "get": {
        "tags": [
          "Asset Register Module"
        ],
        "summary": "Lists all assets",
        "operationId": "GetAsset",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of AssetResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/budget-module/Budget": {
      "get": {
        "tags": [
          "Budget Module"
        ],
        "summary": "Lists all budgets.",
        "operationId": "GetBudget",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of BudgetResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/calendar-module/Reminder": {
      "get": {
        "tags": [
          "Calendar Module"
        ],
        "summary": "Lists all reminders.",
        "operationId": "GetReminder",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of ReminderResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReminderResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/contacts-module/Contact": {
      "put": {
        "tags": [
          "Contacts Module"
        ],
        "summary": "Update an existing Contact.",
        "operationId": "PutContact",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ContactUpdateRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - returns the updated ContactResponseDto",
            "schema": {
              "$ref": "#/definitions/ContactResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the ContactID of the given ContactUpdateRequest does not exist."
          },
          "422": {
            "description": "UnprocessableEntity - When the given ContactUpdateRequest is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "Contacts Module"
        ],
        "summary": "Creates a new Contact.",
        "operationId": "PostContact",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ContactCreateRequestDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created - returns the created Contact with its assigned newly ID.",
            "schema": {
              "$ref": "#/definitions/ContactResponseDto"
            }
          },
          "422": {
            "description": "UnprocessableEntity - When the given ContactCreateRequest is invalid."
          }
        }
      },
      "get": {
        "tags": [
          "Contacts Module"
        ],
        "summary": "Lists all contacts",
        "operationId": "GetContact",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of ContactResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/contacts-module/Contact/{contactID}": {
      "get": {
        "tags": [
          "Contacts Module"
        ],
        "summary": "Gets the Contact with the given ID.",
        "operationId": "GetContactById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "description": "The ID of the Contact to be returned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - returns the Contact requested.",
            "schema": {
              "$ref": "#/definitions/ContactResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the given ContactID does not exist."
          }
        }
      }
    },
    "/api/v1/core-module/Currency": {
      "put": {
        "tags": [
          "Core Module"
        ],
        "summary": "Update an existing Currency.",
        "operationId": "PutCurrency",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CurrencyUpdateRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - returns the updated CurrencyResponseDto",
            "schema": {
              "$ref": "#/definitions/CurrencyResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the CurrencyID of the given currencyUpdateRequest does not exist."
          },
          "422": {
            "description": "UnprocessableEntity - When the given currencyUpdateRequest is invalid."
          }
        }
      },
      "post": {
        "tags": [
          "Core Module"
        ],
        "summary": "Creates a new Currency.",
        "operationId": "PostCurrency",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CurrencyCreateRequestDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created - returns the created currency with its assigned newly ID.",
            "schema": {
              "$ref": "#/definitions/CurrencyResponseDto"
            }
          },
          "422": {
            "description": "UnprocessableEntity - When the given currencyCreateRequest is invalid."
          }
        }
      },
      "get": {
        "tags": [
          "Core Module"
        ],
        "summary": "Lists all currencies supported by the API wherever a CurrencyID can be provided.",
        "operationId": "GetCurrency",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of CurrencyResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CurrencyResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/core-module/Currency/{currencyID}": {
      "get": {
        "tags": [
          "Core Module"
        ],
        "summary": "Gets the Currency with the given ID.",
        "operationId": "GetCurrencyById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "currencyID",
            "description": "The ID of the Currency to be returned.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - returns the Currency requested.",
            "schema": {
              "$ref": "#/definitions/CurrencyResponseDto"
            }
          },
          "404": {
            "description": "NotFound - When the given CurrencyID does not exist."
          }
        }
      }
    },
    "/api/v1/document-module/Document": {
      "get": {
        "tags": [
          "Documents Module"
        ],
        "summary": "Lists all documents.",
        "operationId": "GetDocument",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of DocumentResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/mail-module/MailMessage": {
      "get": {
        "tags": [
          "Mail Module"
        ],
        "summary": "Lists all mail messages",
        "operationId": "GetMailMessage",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of MailMessageResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MailMessageResponseDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks-module/TaskList": {
      "get": {
        "tags": [
          "Tasks Module"
        ],
        "summary": "Lists all task lists.",
        "operationId": "GetTaskList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Ok - returns a list of TaskListResponseDto",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskListResponseDto"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AssetResponseDto": {
      "type": "object",
      "properties": {
        "assetID": {
          "format": "int32",
          "type": "integer"
        },
        "assetName": {
          "type": "string"
        }
      }
    },
    "BankAccountCreateRequestDto": {
      "required": [
        "AccountName",
        "BankAccountTypeID",
        "CurrencyID",
        "IsBudgeted",
        "OpenedOn",
        "OpeningBalance"
      ],
      "type": "object",
      "properties": {
        "bankAccountTypeID": {
          "format": "int32",
          "description": "The BankAccountType for this BankAccount.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "type": "integer"
        },
        "accountName": {
          "type": "string"
        },
        "balance": {
          "format": "int32",
          "type": "integer"
        },
        "isBudgeted": {
          "type": "boolean"
        },
        "openingBalance": {
          "format": "int32",
          "type": "integer"
        },
        "currentBalance": {
          "format": "int32",
          "type": "integer"
        },
        "openedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BankAccountInfoResponseDto": {
      "type": "object",
      "properties": {
        "bankAccountID": {
          "format": "int32",
          "type": "integer"
        },
        "accountName": {
          "type": "string"
        },
        "currentBalance": {
          "format": "int32",
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "decimalFormat": {
          "type": "string"
        },
        "isBudgeted": {
          "type": "boolean"
        }
      }
    },
    "BankAccountResponseDto": {
      "type": "object",
      "properties": {
        "bankAccountID": {
          "format": "int32",
          "description": "The BankAccount identifier.",
          "type": "integer",
          "readOnly": true
        },
        "bankAccountTypeID": {
          "format": "int32",
          "description": "The BankAccountType for this BankAccount.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "type": "integer"
        },
        "accountName": {
          "type": "string"
        },
        "isBudgeted": {
          "type": "boolean"
        },
        "openingBalance": {
          "format": "int32",
          "type": "integer"
        },
        "currentBalance": {
          "format": "int32",
          "type": "integer"
        },
        "openedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BankAccountTransactionResponseDto": {
      "type": "object",
      "properties": {
        "bankAccountTransactionID": {
          "format": "int32",
          "type": "integer"
        },
        "bankAccountID": {
          "format": "int32",
          "type": "integer"
        },
        "bankAccountTransactionTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "bankAccountStatementID": {
          "format": "int32",
          "type": "integer"
        },
        "bankAccountStatementNumber": {
          "format": "int32",
          "type": "integer"
        },
        "isReconciled": {
          "type": "boolean"
        },
        "payeeID": {
          "format": "int32",
          "type": "integer"
        },
        "payeeName": {
          "type": "string"
        },
        "currencyID": {
          "format": "int32",
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "decimalFormat": {
          "type": "string"
        },
        "credit": {
          "format": "double",
          "type": "number"
        },
        "debit": {
          "format": "double",
          "type": "number"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "transactionDate": {
          "type": "string"
        }
      }
    },
    "BankAccountTypeResponseDto": {
      "type": "object",
      "properties": {
        "bankAccountTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "BankAccountUpdateRequestDto": {
      "required": [
        "AccountName",
        "BankAccountID",
        "BankAccountTypeID",
        "CurrencyID",
        "IsBudgeted",
        "OpenedOn",
        "OpeningBalance"
      ],
      "type": "object",
      "properties": {
        "bankAccountID": {
          "format": "int32",
          "description": "The BankAccount identifier.",
          "type": "integer"
        },
        "bankAccountTypeID": {
          "format": "int32",
          "description": "The BankAccountType for this BankAccount.",
          "type": "integer"
        },
        "currencyID": {
          "format": "int32",
          "type": "integer"
        },
        "accountName": {
          "type": "string"
        },
        "isBudgeted": {
          "type": "boolean"
        },
        "openingBalance": {
          "format": "int32",
          "type": "integer"
        },
        "currentBalance": {
          "format": "int32",
          "type": "integer"
        },
        "openedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BankCreateRequestDto": {
      "required": [
        "BankName"
      ],
      "type": "object",
      "properties": {
        "bankName": {
          "type": "string"
        }
      }
    },
    "BankResponseDto": {
      "type": "object",
      "properties": {
        "bankID": {
          "format": "int32",
          "type": "integer"
        },
        "bankName": {
          "type": "string"
        }
      }
    },
    "BankUpdateRequestDto": {
      "required": [
        "BankID",
        "BankName"
      ],
      "type": "object",
      "properties": {
        "bankID": {
          "format": "int32",
          "description": "The Bank identifier.",
          "type": "integer",
          "readOnly": true
        },
        "bankName": {
          "type": "string"
        }
      }
    },
    "BudgetResponseDto": {
      "type": "object",
      "properties": {
        "budgetID": {
          "format": "int32",
          "type": "integer"
        },
        "budgetName": {
          "type": "string"
        }
      }
    },
    "ContactCreateRequestDto": {
      "required": [
        "FirstName",
        "LastName"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "ContactResponseDto": {
      "type": "object",
      "properties": {
        "contactID": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "ContactUpdateRequestDto": {
      "required": [
        "ContactID",
        "FirstName",
        "LastName"
      ],
      "type": "object",
      "properties": {
        "contactID": {
          "format": "int32",
          "description": "The Contact identifier.",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "CurrencyCreateRequestDto": {
      "required": [
        "DecimalFormat",
        "Symbol"
      ],
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        },
        "decimalFormat": {
          "type": "string"
        }
      }
    },
    "CurrencyResponseDto": {
      "type": "object",
      "properties": {
        "currencyID": {
          "format": "int32",
          "type": "integer"
        },
        "symbol": {
          "type": "string"
        },
        "decimalFormat": {
          "type": "string"
        }
      }
    },
    "CurrencyUpdateRequestDto": {
      "required": [
        "CurrencyID",
        "DecimalFormat",
        "Symbol"
      ],
      "type": "object",
      "properties": {
        "currencyID": {
          "format": "int32",
          "description": "The Currency identifier.",
          "type": "integer",
          "readOnly": true
        },
        "symbol": {
          "type": "string"
        },
        "decimalFormat": {
          "type": "string"
        }
      }
    },
    "DocumentResponseDto": {
      "type": "object",
      "properties": {
        "documentID": {
          "format": "int32",
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "MailMessageResponseDto": {
      "type": "object",
      "properties": {
        "mailMessageID": {
          "format": "int32",
          "type": "integer"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "ReminderResponseDto": {
      "type": "object",
      "properties": {
        "reminderID": {
          "format": "int32",
          "type": "integer"
        },
        "reminderName": {
          "type": "string"
        }
      }
    },
    "TaskListResponseDto": {
      "type": "object",
      "properties": {
        "taskListID": {
          "format": "int32",
          "type": "integer"
        },
        "taskListName": {
          "type": "string"
        }
      }
    }
  }
}