@page "/accounts/bulk-upload"
@inherits AdminAssistantComponentBase<AdminAssistant.UI.Modules.AccountsModule.IBankAccountStatementImportViewModel>

<PageTitle>@vm.PageTitle</PageTitle>

<MudText class="mb-2" Typo="Typo.h6">@vm.HeaderText</MudText>

<MudText class="mb-2" Typo="Typo.subtitle1">@vm.SubHeaderText</MudText>

<MudCard>
    <MudCardContent>
        <MudFileUpload T="IBrowserFile" Accept=".pdf" FilesChanged="UploadStatement" MaximumFileCount="1">
            <ButtonTemplate>
                <MudButton HtmlTag="label"
                        Variant="Variant.Filled"
                        Color="Color.Primary"
                        StartIcon="@Icons.Material.Filled.UploadFile"
                        for="@context">
                    Please select a PDF bank account statement to import.
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>
    </MudCardContent>
</MudCard>

@if (vm.FileName != string.Empty)
{
    <MudList>
        <MudListItem Icon="@Icons.Material.Filled.AttachFile">
            @vm.FileName <code>@vm.FileSize bytes</code>
        </MudListItem>
    </MudList>
}

@if (vm.EmbeddedFileContentSrc != string.Empty)
{
<MudCard>
    <MudCardContent>
        <embed src="@vm.EmbeddedFileContentSrc" style="width=100%" />
    </MudCardContent>
</MudCard>
}

@code {

    private async Task UploadStatement(IBrowserFile browserFile)
    {
        using var memoryStream = new MemoryStream();
        await browserFile.OpenReadStream().CopyToAsync(memoryStream).ConfigureAwait(false);
        byte[] fileBytes = memoryStream.ToArray();

        vm.ImportStatement(browserFile.ContentType, browserFile.Name, browserFile.Size, fileBytes);
    }
}

