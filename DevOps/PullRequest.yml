name: $(BuildID)

pr:
  autoCancel: true
  branches:
    include:
    - dev
    - master
  paths:
    exclude:
    - ./DevOps
    - ./docs

trigger: none # Disable CI Builds

resources:
- repo: self
  clean: true

stages:
- stage: PRBuild
  jobs:
  - job: PRBuild
    pool: # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
      vmImage: 'windows-latest' # Need windows to get code coverage report - https://github.com/actions/virtual-environments/tree/master/images/win
      #name: Self-Hosted
    steps:
    # Set-up build environment ...
    - task: UseDotNet@2
      displayName: 'Ensure CI uses correct sdk Version'
      inputs:
        packageType: 'sdk'
        useGlobalJson: true
        workingDirectory: 'src'
    # Write out secret for NuGet.config to access DevExpress secured NuGet feed ...
    # See https://supportcenter.devexpress.com/ticket/details/T818634/devexpress-nuget-how-to-hide-unique-nuget-feed-in-azure-devops-build-pipeline
    - task: PowerShell@2
      displayName: 'Load DevExpress secured NuGet feed'
      inputs:
        targetType: 'inline'
        script: 'Write-Host "##vso[task.setvariable variable=DX_NUGET_PUB;]$(DX_NUGET)"'
        pwsh: true
    # Restore dependencies ...
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore xamarin'
      inputs:
        command: 'restore'
        projects: 'src/AdminAssistant.Xamarin.sln'
        feedsToUse: 'config'
        nugetConfigPath: 'DevOps/NuGet.config'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore Non-Xamarin'
      inputs:
        command: 'restore'
        projects: 'src/AdminAssistant.Blazor.sln'
        feedsToUse: 'config'
        nugetConfigPath: 'DevOps/NuGet.config'
    - task: Npm@1
      displayName: 'Blazor npm install'
      inputs:
        command: 'install'
        workingDir: 'src/AdminAssistant.Blazor/Client'
    # Build ...
    - task: DotNetCoreCLI@2
      displayName: 'Blazor dotnet build'
      inputs:
        command: 'build'
        projects: 'src/AdminAssistant.Blazor.sln' # For now this will do to exclude Xamarin projects. May later need an AdminAssistant.NonXamarin.sln
        arguments: '--configuration Release --no-restore'
    - task: XamarinAndroid@1
      displayName: 'Xamarin Android dotnet build'
      inputs:
        projectFile: 'src/AdminAssistant.Xamarin/Android/AdminAssistant.Android.csproj'
        configuration: 'Release'
        msbuildVersionOption: 'latest'
        msbuildArchitectureOption: 'x64'
        jdkOption: 'JDKVersion'
    - task: Npm@1
      displayName: 'Blazor npm build'
      inputs:
        command: 'custom'
        workingDir: 'src/AdminAssistant.Blazor/Client'
        customCommand: 'run build'
    # Run Unit Tests ...
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: 'src/AdminAssistant.sln'
        testRunTitle: 'Unit Tests'
        arguments: '--configuration Release --no-build'
