name: $(BuildID)

pr: # PR builds
  autoCancel: true
  branches:
    include:
    - dev
    - master
  paths:
    exclude:
    - ./DevOps
    - ./docs

trigger: none # Disable CI Builds

resources:
- repo: self
  clean: true

stages:
- stage: PRBuild
  jobs:
  - job: PRBuild
    pool: # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
      vmImage: 'windows-latest' # Need windows to get code coverage report - https://github.com/actions/virtual-environments/tree/master/images/win
      #name: Self-Hosted
    steps:
    # Set-up build environment ...
    - task: UseDotNet@2
      displayName: 'Ensure CI uses correct sdk Version'
      inputs:
        packageType: 'sdk'
        version: '5.0.100'
    # Restore dependencies ...
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: 'src/AdminAssistant.sln'
        feedsToUse: 'config'
        nugetConfigPath: 'DevOps/NuGet.config'
    - task: Npm@1
      displayName: 'Blazor npm install'
      inputs:
        command: 'install'
        workingDir: 'src/AdminAssistant.Blazor/Client'
    # Build ...
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: 'src/AdminAssistant.sln' # For now this will do to exclude Xamarin projects. May later need an AdminAssistant.NonXamarin.sln
        arguments: '--configuration Release --no-restore'
    # SG 20-Apr-2020: Comment the following for now as it does not work with x64 build config.
    # - task: XamarinAndroid@1
    #   displayName: 'Xamarin Android dotnet build'
    #   inputs:
    #     projectFile: 'src/AdminAssistant.Xamarin/Android/AdminAssistant.Android.csproj'
    #     configuration: 'Release'
    #     msbuildVersionOption: 'latest'
    #     msbuildArchitectureOption: 'x64'
    #     jdkOption: 'JDKVersion'
    - task: Npm@1
      displayName: 'Blazor npm build'
      inputs:
        command: 'custom'
        workingDir: 'src/AdminAssistant.Blazor/Client'
        customCommand: 'run build'
    # Run Unit Tests ...
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: 'src/AdminAssistant.sln'
        testRunTitle: 'Unit Tests'
        arguments: '--configuration Release --no-build'
        #arguments: '--configuration Release --filter Category=Unit --no-build'
